{"ast":null,"code":"var _jsxFileName = \"/Users/keenanjones/Desktop/Projects/myBlog/client/src/components/Blog.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport Post from './Post';\n\nconst Blog = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [featuredBlog, setFeatureBlog] = useState([]);\n  const [categories, setCategories] = useState([]);\n  useEffect(() => {\n    const FetchData = async () => {\n      try {\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/posts`);\n        setFeatureBlog(res.data[0]);\n\n        for (let i = 0; i < res.data.length; i++) {\n          if (res.data[i].tags.length > 1) {\n            for (let j = 0; j < res.data[i].tags.length; j++) {\n              setCategories(categories.push(res.data[i].tags[j]));\n            }\n          } else {\n            setCategories(categories.push(res.data[i].tags[0]));\n          }\n        }\n      } catch (err) {}\n    };\n\n    FetchData();\n  }, []);\n  useEffect(() => {\n    const fetchBlogs = async () => {\n      try {\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/posts`);\n        setBlogs(res.data);\n      } catch (err) {}\n    };\n\n    fetchBlogs();\n  }, []);\n\n  const capitalizeFirstLetter = word => {\n    if (word) return word.charAt[0].toUpperCase() + word.slice(1);\n    return '';\n  };\n\n  const renderBlogs = () => {\n    return blogs.map(post => {\n      console.log(post.title);\n      return /*#__PURE__*/React.createElement(Post, {\n        key: post._id,\n        post: post,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 4\n    }\n  }, renderBlogs());\n};\n\nexport default Blog;","map":{"version":3,"sources":["/Users/keenanjones/Desktop/Projects/myBlog/client/src/components/Blog.js"],"names":["React","useState","useEffect","axios","Link","Post","Blog","blogs","setBlogs","featuredBlog","setFeatureBlog","categories","setCategories","FetchData","res","get","process","env","REACT_APP_API_URL","data","i","length","tags","j","push","err","fetchBlogs","capitalizeFirstLetter","word","charAt","toUpperCase","slice","renderBlogs","map","post","console","log","title","_id"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport {Link} from 'react-router-dom'\nimport Post from './Post'\n\nconst Blog = () => {\n  const [blogs, setBlogs] = useState([]);\n  const [featuredBlog, setFeatureBlog] = useState([]);\n  const [categories, setCategories] = useState([]);\n\n  useEffect( () => {\n   const FetchData = async () => {\n   try{\n    const res = await axios.get(`${process.env.REACT_APP_API_URL}/posts`);\n    setFeatureBlog(res.data[0]);\n    for( let i = 0; i < res.data.length; i++){\n     if( res.data[i].tags.length > 1){\n      for( let j = 0; j < res.data[i].tags.length; j++){\n       setCategories(categories.push(res.data[i].tags[j]))\n      }\n     }else{\n      setCategories(categories.push(res.data[i].tags[0]))\n     }\n    }\n   }\n   catch(err){\n\n   }\n  }\n   FetchData();\n  }, []);\n\n\n\n  useEffect( () => {\n   const fetchBlogs = async () => {\n   try{\n    const res = await axios.get(`${process.env.REACT_APP_API_URL}/posts`);\n    setBlogs(res.data);\n   }\n   catch(err){\n   }\n  }\n   fetchBlogs();\n  }, []);\n\n  const capitalizeFirstLetter = (word) => {\n   if(word)\n   return word.charAt[0].toUpperCase() + word.slice(1)\n  return '';\n  };\n\n \n\n  const renderBlogs = () => {\n    \n     return blogs.map(post => {\n       console.log(post.title)\n     return <Post key={post._id} post={post}/>\n    })\n  }\n\n\n return (\n   <div>\n     {renderBlogs()}\n   </div>\n );\n}\n\nexport default Blog\n"]},"metadata":{},"sourceType":"module"}